<?php

namespace $NAMESPACE$;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
/**
 * @method static Builder filter(array $filters = [])
 */
class $CLASS$ extends Model
{
    /*
    |--------------------------------------------------------------------------
    | GLOBAL VARIABLES
    |--------------------------------------------------------------------------
    */

    protected $table = '$TABLE$';

    protected $primaryKey = 'id';

    protected $titleKey = 'name';

    protected $$FILLABLE$;

    protected $appends = [];

    protected $casts = [];

    protected $hidden = [];

    protected $searchable = [];

    /*
    |--------------------------------------------------------------------------
    | FUNCTIONS
    |--------------------------------------------------------------------------
    */

    /*
    |--------------------------------------------------------------------------
    | RELATIONS
    |--------------------------------------------------------------------------
    */


    /*
    |--------------------------------------------------------------------------
    | ACCESSORS
    |--------------------------------------------------------------------------
    */

    /*
    |--------------------------------------------------------------------------
    | MUTATORS
    |--------------------------------------------------------------------------
    */

    /*
    |--------------------------------------------------------------------------
    | SCOPES
    |--------------------------------------------------------------------------
    */

    public function scopeFilter(Builder $query, array $filters = []): Builder
    {
        return $query
            ->when(!empty($filters['search']),
                fn(Builder $query) => $query->whereAny($this->searchable, 'like', "%{$filters['search']}%")
            })->when(
                !empty($filters['created_at_from_date']),
                fn(Builder $query) => $query->whereDate($this->getTable().'.created_at', '>=', $filters['created_at_from_date'])
            )->when(
                !empty($filters['created_at_to_date']),
                fn(Builder $query) => $query->whereDate($this->getTable().'.created_at', '<=', $filters['created_at_to_date'])
            )->when(
                !empty($filters['updated_at_from_date']),
                fn(Builder $query) => $query->whereDate($this->getTable().'.updated_at', '>=', $filters['updated_at_from_date'])
            )->when(
                !empty($filters['updated_at_to_date']),
                fn(Builder $query) => $query->whereDate($this->getTable().'.updated_at', '<=', $filters['updated_at_to_date'])
            )->when(
                !empty($filters['limit']),
                fn(Builder $query) => $query->limit($filters['limit'])
            )->when(
                !empty($filters['columns']),
                fn(Builder $query) => $query->select($filters['columns'])
            );
    }
}
